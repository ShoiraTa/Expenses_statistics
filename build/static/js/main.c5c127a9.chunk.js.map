{"version":3,"sources":["components/Expences/ExpenseDate.js","components/UI/Card.js","components/Expences/ExpenseItem.js","components/NewExpense/NewExpenseForm.js","components/NewExpense/NewExpense.js","components/Expences/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expences/ExpensesChart.js","components/Expences/Expenses.js","App.js","index.js"],"names":["ExpenseDate","props","month","expenseDate","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","useState","expenseTitle","title","newTitle","expensePrice","onClick","NewExpenseFrom","enteredTitle","setEnteredTitle","enteredDate","setEnteredDate","enteredAmount","setEnteredAmount","onSubmit","event","preventDefault","expenseData","onSaveExpenseData","type","value","onChange","target","min","max","NewExpense","enteredExpenseData","id","Math","random","toString","onAddExpenses","ExpensesFilter","selectedYear","onChangeFilteredYear","currentYear","setCurrentYear","name","defaultValue","e","ChartBar","label","maxValue","fillBar","round","style","height","Chart","dataPoint","dataPointValue","map","data","ExpensesChart","expenses","expense","expenseMonth","getMonth","intPriceValue","parseInt","Expenses","Date","setExpenses","filteredYear","setFilteredYear","fExpenses","filter","expensesContent","length","item","date","setYear","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5c127a9.chunk.js","sourcesContent":["import './ExpenseDate.css';\n\nfunction ExpenseDate(props) {\n  const month = props.expenseDate.toLocaleString('en-US', { month: 'long' });\n  const day = props.expenseDate.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.expenseDate.getFullYear(0);\n  return (\n    <div className= 'expense-date'>\n      <div className= 'expense-date__month'>{month}</div>\n      <div className= 'expense-date__day'>{day}</div>\n      <div className= 'expense-date__year'>{year}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;\n","import './card.css';\n\nconst Card = (props) => {\n  const classes = `card ${props.className}`;\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;","import React, { useState } from 'react';\n\nimport './ExpenseItem.css';\nimport ExpenseDate from './ExpenseDate.js';\nimport Card from '../UI/Card.js';\n\nconst ExpenseItem = (props) => {\n  const [title, newTitle] = useState(props.expenseTitle);\n\n  const clickHandler = () => {\n    newTitle('Expired');\n  };\n\n  return (\n    <>\n\n    <Card className = \"expense-item\">\n      <ExpenseDate expenseDate = {props.expenseDate}/>\n      <div className = \"expense-item__description\">\n        <h2>{title}</h2>\n        <div className=\"expense-item__price\">${props.expensePrice}</div>\n        <button onClick = {clickHandler}>clickme</button>\n      </div>\n    </Card>\n    </>\n  );\n};\n\nexport default ExpenseItem;\n","import React, { useState } from 'react';\nimport './newExpenseForm.css';\n\nconst NewExpenseFrom = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState();\n  const [enteredDate, setEnteredDate] = useState();\n  const [enteredAmount, setEnteredAmount] = useState();\n\n  const titleChageHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const expenseData = {\n      expenseTitle: enteredTitle,\n      expenseDate: enteredDate,\n      expensePrice: enteredAmount,\n    };\n\n    props.onSaveExpenseData(expenseData);\n\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n\n  return (\n    <form onSubmit={submitFormHandler}>\n      <div className=\"new_expense__constrols\">\n        <div className=\"new_expense__constrol\">\n          <label>Title</label>\n          <input type=\"text\" value={enteredTitle} onChange={titleChageHandler} />\n        </div>\n        <div className=\"new_expense__constrol\">\n          <label>Amount</label>\n          <input type=\"number\" value={enteredAmount} onChange={amountChangeHandler} />\n        </div>\n        <div className=\"new_expense__constrol\">\n          <label>Date</label>\n          <input type=\"date\" min=\"2019-01-01\" value={enteredDate} max=\"2022-12-31\" onChange={dateChangeHandler} />\n        </div>\n      </div>\n      <div className=\"new_expense__actions\">\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewExpenseFrom;\n","import React from 'react';\nimport './newExpense.css';\nimport NewExpenseFrom from './NewExpenseForm.js';\n\nconst NewExpense = (props) => {\n  const saveExpenseHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpenses(expenseData);\n  };\n\n  return (\n<div className = \"new-expense\">\n      <NewExpenseFrom onSaveExpenseData = {saveExpenseHandler}/> </div>\n  );\n};\n\nexport default NewExpense;","import React, { useState } from 'react';\nimport './expensesFilter.css';\n\nfunction ExpensesFilter({ selectedYear, onChangeFilteredYear }) {\n  const [currentYear, setCurrentYear] = useState(selectedYear);\n\n  const currentYearHandler = (e) => {\n    e.preventDefault();\n    setCurrentYear(e.target.value);\n    onChangeFilteredYear(e.target.value);\n  };\n  return (\n    <div className= \"filter-container\">\n      <p>Filter by year</p>\n      <select name=\"year\" id=\"year\" defaultValue = {currentYear} onChange = {currentYearHandler}\n>\n        <option value=\"2019\">2019</option>\n        <option value=\"2020\">2020</option>\n        <option value=\"2021\">2021</option>\n      </select>\n    </div>\n  );\n}\n\nexport default ExpensesFilter;\n","import React from 'react';\nimport './ChartBar.css';\n\nfunction ChartBar({\n  label, value, maxValue,\n}) {\n  let fillBar = '0%';\n\n  if (maxValue > 0) {\n    fillBar = `${Math.round((value / maxValue) * 100)}%`;\n  }\n  return (\n    <div className='chart-bar'>\n      <div className='chart-bar__inner'>\n      <div className='chart-bar__fill' style = {{ height: fillBar }}></div>\n      </div>\n      <div className='chart-bar__label'>{label}</div>\n    </div>\n  );\n}\n\nexport default ChartBar;\n","import React from 'react';\nimport './Chart.css';\nimport ChartBar from './ChartBar';\n\nfunction Chart({ dataPoint }) {\n  const dataPointValue = dataPoint.map((dataPoint) => dataPoint.value);\n  const maxValue = Math.max(...dataPointValue);\n\n  return (\n    <div className = 'chart'>\n      {dataPoint.map((data) => (\n        <ChartBar\n        value = {data.value}\n        maxValue = {maxValue}\n        key= {data.label}\n        label= {data.label} />\n      ))}\n    </div>\n  );\n}\n\nexport default Chart;\n","import React from 'react';\nimport Chart from '../Chart/Chart';\n\nfunction ExpensesChart({ expenses }) {\n  const dataPoint = [\n    { label: 'Jan', value: 0 },\n    { label: 'Feb', value: 0 },\n    { label: 'Mar', value: 0 },\n    { label: 'Apr', value: 0 },\n    { label: 'May', value: 0 },\n    { label: 'Jun', value: 0 },\n    { label: 'Jul', value: 0 },\n    { label: 'Aug', value: 0 },\n    { label: 'Sep', value: 0 },\n    { label: 'Oct', value: 0 },\n    { label: 'Nov', value: 0 },\n    { label: 'Dec', value: 0 },\n  ];\n\n  /* eslint-disable-next-line */\n  for (const expense of expenses) {\n    const expenseMonth = expense.expenseDate.getMonth();\n    let intPriceValue = expense.expensePrice;\n    intPriceValue = parseInt(intPriceValue, 10);\n    dataPoint[expenseMonth].value += intPriceValue;\n  }\n\n  return (\n    <Chart dataPoint ={dataPoint} />\n  );\n}\n\nexport default ExpensesChart;\n","import { useState } from 'react';\nimport ExpenseItem from './ExpenseItem.js';\nimport './Expenses.css';\nimport Card from '../UI/Card.js';\nimport NewExpense from '../NewExpense/NewExpense';\nimport ExpensesFilter from './ExpensesFilter.js';\nimport ExpensesChart from './ExpensesChart.js';\n\nconst Expenses = () => {\n  const [expenses, setExpenses] = useState(\n    [{\n      expenseDate: new Date(2021, 1, 12),\n      expensePrice: 268,\n      expenseTitle: 'Car ensurance',\n      id: 1,\n    },\n    {\n      expenseDate: new Date(2021, 3, 12),\n      expensePrice: 110,\n      expenseTitle: 'Dinner',\n      id: 2,\n    },\n    {\n      expenseDate: new Date(2021, 2, 12),\n      expensePrice: 52,\n      expenseTitle: 'Cheese',\n      id: 3,\n    },\n    {\n      expenseDate: new Date(2021, 10, 12),\n      expensePrice: 80,\n      expenseTitle: 'Toilet paper',\n      id: 4,\n    }],\n  );\n\n  const addExpenseHandler = (expenseData) => {\n    const date = new Date(expenseData.expenseDate);\n    expenseData.expenseDate = date;\n    setExpenses([...expenses, expenseData]);\n  };\n\n  const [filteredYear, setFilteredYear] = useState('2021');\n\n  const filteredYearHandler = (setYear) => {\n    setFilteredYear(setYear);\n  };\n\n  const fExpenses = expenses.filter((e) => e.expenseDate.getFullYear().toString() === filteredYear);\n\n  let expensesContent = <p>No Expenses found </p>;\n\n  if (fExpenses.length > 0) {\n    expensesContent = fExpenses.map((item) => (\n    <ExpenseItem key = {item.id} expenseDate={item.expenseDate}\n    expensePrice={item.expensePrice}\n    expenseTitle={item.expenseTitle}/>));\n  }\n\n  return (\n    <>\n    <NewExpense onAddExpenses={addExpenseHandler}\n    />\n    <ExpensesFilter selectedYear = {filteredYear}\n     onChangeFilteredYear = {filteredYearHandler}/>\n     <ExpensesChart expenses = {fExpenses} />\n    <Card className= \"expenses-container\">\n    {expensesContent}\n    </Card>\n    </>\n  );\n};\n\nexport default Expenses;\n","import Expenses from './components/Expences/Expenses';\n\nconst App = () => (\n    <div>\n      <h2>Let's get started!</h2>\n      <Expenses />\n    </div>\n);\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}